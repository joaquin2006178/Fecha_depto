# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i7C2oADVU66y-MTne3SBbuRzgYzyvPt4
"""

import streamlit as st
import pandas as pd
from datetime import date, timedelta

# Configuración inicial
st.set_page_config(page_title="Calendario de Inscripciones", layout="centered")

# Función para generar un rango de fechas
def generar_fechas(fecha_inicio, fecha_fin):
    delta = fecha_fin - fecha_inicio
    return [fecha_inicio + timedelta(days=i) for i in range(delta.days + 1)]

# Cargar o inicializar datos
if "inscripciones" not in st.session_state:
    st.session_state.inscripciones = pd.DataFrame(columns=["Fecha", "Nombre"])

# Encabezado
st.title("Calendario de Inscripciones")
st.write("Registra tus visitas al departamento de la playa.")

# Selección de fechas disponibles
st.sidebar.header("Configuración de Fechas")
fecha_inicio = st.sidebar.date_input("Fecha de inicio", value=date.today())
fecha_fin = st.sidebar.date_input("Fecha de fin", value=date.today() + timedelta(days=30))

if fecha_inicio > fecha_fin:
    st.sidebar.error("La fecha de inicio debe ser anterior a la fecha de fin.")
else:
    fechas_disponibles = generar_fechas(fecha_inicio, fecha_fin)

# Formulario para registrar inscripción
st.header("Registrar Inscripción")
with st.form("formulario_registro"):
    nombre = st.text_input("Tu nombre", max_chars=50)
    fecha_seleccionada = st.date_input("Selecciona una fecha", value=date.today(), min_value=fecha_inicio, max_value=fecha_fin)
    submit = st.form_submit_button("Registrar")

    if submit:
        if fecha_seleccionada in st.session_state.inscripciones["Fecha"].values:
            st.error("Esta fecha ya está ocupada. Por favor, elige otra.")
        elif not nombre.strip():
            st.error("El nombre no puede estar vacío.")
        else:
            nueva_inscripcion = pd.DataFrame({"Fecha": [fecha_seleccionada], "Nombre": [nombre]})
            st.session_state.inscripciones = pd.concat([st.session_state.inscripciones, nueva_inscripcion], ignore_index=True)
            st.success(f"¡Inscripción registrada para {fecha_seleccionada}!")

# Mostrar calendario de inscripciones
st.header("Calendario de Inscripciones")
inscripciones_agrupadas = st.session_state.inscripciones.groupby("Fecha").agg(list).reset_index()
calendario = pd.DataFrame({"Fecha": fechas_disponibles})
calendario = calendario.merge(inscripciones_agrupadas, on="Fecha", how="left")
calendario["Nombre"] = calendario["Nombre"].fillna("Disponible")
calendario["Fecha"] = calendario["Fecha"].astype(str)  # Convertir fechas a texto para evitar errores

# Mostrar tabla de calendario
st.dataframe(calendario, use_container_width=True)

# Opción para cancelar inscripciones
st.header("Cancelar Inscripción")
with st.form("formulario_cancelacion"):
    fecha_cancelar = st.date_input("Selecciona la fecha a cancelar", value=date.today(), min_value=fecha_inicio, max_value=fecha_fin)
    nombre_cancelar = st.text_input("Tu nombre para confirmar", max_chars=50)
    cancelar = st.form_submit_button("Cancelar")

    if cancelar:
        mask = (st.session_state.inscripciones["Fecha"] == fecha_cancelar) & (st.session_state.inscripciones["Nombre"] == nombre_cancelar)
        if mask.any():
            st.session_state.inscripciones = st.session_state.inscripciones[~mask]
            st.success(f"Inscripción para {fecha_cancelar} cancelada.")
        else:
            st.error("No se encontró una inscripción con los datos proporcionados.")